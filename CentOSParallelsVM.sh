#!/bin/bash -e
#
# Unattended Kickstart install of minimal CentOS server in Parallels VM.
#
# Parallels Tools is installed.
#
# Zeroconf (a.k.a. rendezvous, a.k.a. bonjour) is enabled for easy ssh access on the
# .local domain, e.g. with CENTOS_HOSTNAME=centos it is immediately possible to login
# from OS X with 'ssh centos.local -l root'.
#

CENTOS_HOSTNAME=centos
VM_NAME="CentOS Linux ($CENTOS_HOSTNAME)"
VM_CPUS=2
VM_MEMSIZE=4096

# find mirror at "http://mirror.centos.org/centos/6.5/isos/x86_64/CentOS-6.5-x86_64-minimal.iso"
CENTOS_MIRROR="http://centos.skarta.net/6.5/isos/x86_64/CentOS-6.5-x86_64-minimal.iso"

PARALLELS_TOOLS="/Applications/Parallels Desktop.app/Contents/Resources/Tools/prl-tools-lin.iso"



#-----------------------------------------------------------------------------------------------

##
##
##
function main() {
   local SCRIPT_NAME=${0##*/}

   # create VM
   if [ "$1" = "--create" ]
   then
      has_mkisofs
      create_iso_vars
      create_workspace
      trap delete_workspace EXIT

      fetch_centos_iso
      checksum_centos_iso
      extract_centos_iso

      prepare_kickstart
      add_kickstart_cfg

      burn_kickstart_iso

      create_vm

      umount_isos_message

   # umount ISO files from VM
   elif [ "$1" = "--umount" ]
   then
      umount_isos

   # delete VM
   elif [ "$1" = "--delete" ]
   then
      delete_vm

   # cleanup ISO files in /tmp
   elif [ "$1" = "--cleanup" ]
   then
      create_iso_vars
      delete_isos

   else
      echo "usage: $SCRIPT_NAME [--create|--umount|--delete|--cleanup]"
   fi
}

##
##
##
function create_vm() {
   prlctl create "$VM_NAME" --ostype linux --distribution centos
   prlctl set    "$VM_NAME" --on-shutdown close
   prlctl set    "$VM_NAME" --cpus $VM_CPUS
   prlctl set    "$VM_NAME" --memsize $VM_MEMSIZE
   prlctl set    "$VM_NAME" --device-set net0 --type bridged
   prlctl set    "$VM_NAME" --device-set cdrom0 --connect --image "$KICKSTART_ISO"
   prlctl set    "$VM_NAME" --device-add cdrom  --connect --image "$PARALLELS_TOOLS"
   prlctl start  "$VM_NAME"
}

##
##
##
function delete_vm() {
   prlctl stop    "$VM_NAME" --kill
   prlctl delete  "$VM_NAME"
}

##
##
##
function umount_isos() {
   #prlctl list "$VM_NAME" --info | grep cdrom

   prlctl set "$VM_NAME" --device-set cdrom0 --disconnect
   prlctl set "$VM_NAME" --device-set cdrom1 --disconnect

   prlctl set "$VM_NAME" --device-del cdrom1
}

##
##
##
function umount_isos_message() {
   printf "\n%s %s %s\n\n"\
      "Optional:"\
      "After CentOS has rebooted and you see the login prompt,"\
      "run '$SCRIPT_NAME --umount' to disconnect the install ISOs"
}


##
##
##
function has_mkisofs() {
   if ! command -v mkisofs > /dev/null 2>&1
   then
      echo "mkisofs not found: install it with 'brew install cdrtools'"
      exit
   fi
}

##
##
##
function create_iso_vars() {
   CENTOS_ISO="/tmp/${CENTOS_MIRROR##*/}"
   KICKSTART_ISO="${CENTOS_ISO%.iso}-kickstart.iso"
}

##
##
##
function create_workspace() {
   TMPDIR=$(mktemp -d /tmp/${SCRIPT_NAME}.XXXXXX)

   SRC="$TMPDIR/read-only"
   mkdir "$SRC"

   DST="$TMPDIR/read-write"
}

##
##
##
function delete_workspace() {
   if [ -e "$SRC" ]
   then
      hdiutil detach -quiet "$SRC" || true
   fi

   if [ -e "$TMPDIR" ]
   then
      chmod -R +w "$TMPDIR"
      rm -rf "$TMPDIR"
   fi
}

##
##
##
function delete_isos() {
   rm -f "$CENTOS_ISO"
   rm -f "$KICKSTART_ISO"
}

##
##
##
function fetch_centos_iso() {
   if [ ! -e "$CENTOS_ISO" ]
   then
      curl -o "$CENTOS_ISO" "$CENTOS_MIRROR"
   fi
}

##
##
##
function checksum_centos_iso() {
   local mirror_sum=$(curl -s ${CENTOS_MIRROR%/*}/md5sum.txt |\
      grep ${CENTOS_MIRROR##*/} | awk '{print $1}')

   local local_sum=$(md5 -q $CENTOS_ISO)

   if [ "$mirror_sum" != "$local_sum" ]
   then
      echo "checksum error -- try cleaning up with '$SCRIPT_NAME --cleanup'"
      exit
   fi
}

##
##
##
function extract_centos_iso() {
   hdiutil attach -quiet "$CENTOS_ISO" -mountpoint "$SRC"
   ditto "$SRC" "$DST"
   hdiutil detach -quiet "$SRC"
}

##
##
##
function burn_kickstart_iso() {
   mkisofs -quiet\
      -o "$KICKSTART_ISO"\
      -b isolinux/isolinux.bin\
      -c isolinux/boot.cat\
      -no-emul-boot\
      -boot-load-size 4\
      -boot-info-table -R -J -T "$DST"
}

##
##
##
function prepare_kickstart() {
   chmod -R +w "$DST"
   rm "$DST/isolinux/boot.cat"

   cat > "$DST/isolinux/isolinux.cfg" <<EOF
default ks
label ks
  kernel vmlinuz
  append initrd=initrd.img ks=cdrom:/isolinux/ks.cfg
EOF
}

##
##
##
function add_kickstart_cfg() {
   cat > "$DST/isolinux/ks.cfg" <<EOF
# Kickstart file automatically generated by anaconda.

#text
cmdline
skipx
install
cdrom

lang en_US.UTF-8
keyboard us

network --activate --onboot yes --device eth0 --bootproto dhcp --noipv6\
   --hostname $CENTOS_HOSTNAME

rootpw  --plaintext newroot
authconfig --enableshadow --passalgo=sha512
#timezone --utc Europe/Copenhagen
timezone --utc Etc/UTC

firewall --enabled --service=ssh,mdns,http,https --port=8080:tcp,8443:tcp
selinux --disabled

bootloader --location=mbr
zerombr
clearpart --all --initlabel

part /boot --fstype=ext4 --size=500

part pv.008002 --grow --size=1
volgroup vg --pesize=4096 pv.008002
logvol /home --fstype=ext4 --name=lv_home --vgname=vg --grow --size=100
logvol / --fstype=ext4 --name=lv_root --vgname=vg --grow --size=1024 --maxsize=51200
logvol swap --name=lv_swap --vgname=vg --grow --size=3968 --maxsize=3968

repo --name=epel --baseurl=http://download.fedoraproject.org/pub/epel/6/x86_64/

%packages --nobase
@core
epel-release
%end

reboot

%post
exec < /dev/tty3 > /dev/tty3
chvt 3
echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
(

echo "Installing Parallels Tools..."
mount -r -o exec /dev/sr1 /mnt
/mnt/install --install-unattended-with-deps --progress
umount /mnt

yum install -y bash-completion git vim man avahi avahi-tools nss-mdns avahi-compat-libdns_sd
yum upgrade -y

) 2>&1 | /usr/bin/tee /tmp/post_install.log
chvt 1
%end

EOF
}

main "$@"


# Copyright (c) 2014, Jess Thrysoee
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
